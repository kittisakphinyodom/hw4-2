const STORAGE_KEY = "inventoryProducts";

function getProducts() {
    const products = localStorage.getItem(STORAGE_KEY);
    return products ? JSON.parse(products) : [];
}

function saveProducts(products) {
    localStorage.setItem(STORAGE_KEY, JSON.stringify(products));
    loadProducts(); // ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡∏°‡πà
}

function addProduct() { //1.‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏´‡∏•‡∏±‡∏Å
    const id = document.getElementById("productId").value;
    const name = document.getElementById("productName").value;
    const price = parseFloat(document.getElementById("productPrice").value);
    const inStock = parseInt(document.getElementById("productStock").value);
    const category = document.getElementById("productCategory").value;
    const minStock = parseInt(document.getElementById("productMinStock").value);

    if (!id || !name || isNaN(price) || isNaN(inStock) || !category || isNaN(minStock)) {
        alert("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡πâ‡∏Ñ‡∏£‡∏ö‡∏ñ‡πâ‡∏ß‡∏ô!");
        return;
    }

    const products = getProducts();
    if (products.find(p => p.id === id)) {
        alert("‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏ô‡∏µ‡πâ‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß!");
        return;
    }

    
    products.push({ id, name, price, inStock, category, minStock, totalSales: 0 });
    saveProducts(products);
    alert("‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢!");
}



function updateStock(productId, quantity) { //2.‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏´‡∏•‡∏±‡∏Å
    const products = getProducts();
    const product = products.find(p => p.id === productId);
    if (!product) return alert("‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤!");

    product.inStock += quantity;
    if (product.inStock < 0) product.inStock = 0; // ‡πÑ‡∏°‡πà‡πÉ‡∏´‡πâ‡∏ï‡∏¥‡∏î‡∏•‡∏ö
    
    
    saveProducts(products);
    checkLowStock(); // ‡πÄ‡∏ä‡πá‡∏Å‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏´‡∏•‡∏±‡∏á‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï
    
}

function loadProducts() { 
    const products = getProducts();
    const tableBody = document.getElementById("productTable");
    tableBody.innerHTML = "";

    products.forEach(product => {
        const row = `
            <tr>
                <td>${product.id}</td>
                <td>${product.name}</td>
                <td>${product.price} ‡∏ö‡∏≤‡∏ó</td>
                <td>${product.inStock}</td>
                <td>${product.category}</td>
                <td>
                    ${product.inStock === 0 
                        ? "‚ùå ‡∏´‡∏°‡∏î‡πÅ‡∏•‡πâ‡∏ß" 
                        : product.inStock <= product.minStock 
                        ? "‚ö†Ô∏è ‡πÉ‡∏Å‡∏•‡πâ‡∏´‡∏°‡∏î" 
                        : "‚úÖ ‡∏õ‡∏Å‡∏ï‡∏¥"}
                </td>

                <td>
                    <button class="cus-btn" onclick="updateStock('${product.id}', 1)">+1</button>
                    <button class="cus-btn" onclick="updateStock('${product.id}', -1)">-1</button>
                </td>

                <td>
                
                    <button class="cus-button_edit" onclick="editProduct('${product.id}')">üîß ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç</button>
                    <button class="cus-button_delete" onclick="deleteProduct('${product.id}')">üóëÔ∏è ‡∏•‡∏ö</button>
                    <button class="cus-button_sell" onclick="sellProduct('${product.id}')">üõí ‡∏Ç‡∏≤‡∏¢</button>
                    
                </td>
            </tr>
        `;
        tableBody.innerHTML += row;
    });
}

function checkLowStock() { //3.‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏´‡∏•‡∏±‡∏Å
    const products = getProducts();

    products.forEach(product => {
        if (product.inStock === 0) {
            alert(`‚ùå ‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤ "${product.name}" ‡∏´‡∏°‡∏î‡πÅ‡∏•‡πâ‡∏ß! ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏ï‡∏¥‡∏°‡∏™‡∏ï‡πá‡∏≠‡∏Å`);
        } else if (product.inStock <= product.minStock) {
             alert(`‚ö†Ô∏è ‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤ "${product.name}" ‡πÉ‡∏Å‡∏•‡πâ‡∏´‡∏°‡∏î ‡πÄ‡∏´‡∏•‡∏∑‡∏≠ ${product.inStock} ‡∏ä‡∏¥‡πâ‡∏ô`);
        }
    });

        loadProducts(); 
}

//‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô (‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç)
function editProduct(productId) {
    const products = getProducts();
    const product = products.find(p => p.id === productId);
    if (!product) return alert("‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤!");

    const newName = prompt("‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤:", product.name);
    const newPrice = parseFloat(prompt("‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏£‡∏≤‡∏Ñ‡∏≤:", product.price));
    const newCategory = prompt("‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà:", product.category);

    if (!newName || isNaN(newPrice) || !newCategory) {
        alert("‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á!");
        return;
    }

    product.name = newName;
    product.price = newPrice;
    product.category = newCategory;

    saveProducts(products);
    alert("‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!");
}


//‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡πà‡∏ô (‡∏•‡∏ö)
function deleteProduct(productId) {
    let products = getProducts();
    products = products.filter(p => p.id !== productId);

    saveProducts(products);
    alert("‡∏•‡∏ö‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢!");
}

//‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô (‡∏õ‡∏∏‡πà‡∏°‡∏Ç‡∏≤‡∏¢)
function sellProduct(productId) {
    const products = getProducts();
    const product = products.find(p => p.id === productId);
    if (!product) return alert("‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤!");

    if (product.inStock > 0) {
        product.inStock -= 1;
        product.totalSales = (product.totalSales || 0) + 1; // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏¢‡∏≠‡∏î‡∏Ç‡∏≤‡∏¢
        saveProducts(products);
        checkLowStock(); // ‡πÄ‡∏ä‡πá‡∏Ñ‡∏ß‡πà‡∏≤‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÉ‡∏Å‡∏•‡πâ‡∏´‡∏°‡∏î‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
    } else {
        alert(`‚ùå ‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤ "${product.name}" ‡∏´‡∏°‡∏î‡πÅ‡∏•‡πâ‡∏ß!`);
    }
}


function generateSalesReport() {//4.‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏´‡∏•‡∏±‡∏Å
    const products = getProducts();
    
    let report = "--- ‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏¢‡∏≠‡∏î‡∏Ç‡∏≤‡∏¢‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤ ---\n";
    let totalRevenue = 0;
    let hasSales = false;

    // ‡πÄ‡∏£‡∏µ‡∏¢‡∏á‡∏•‡∏≥‡∏î‡∏±‡∏ö‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏Ç‡∏≤‡∏¢‡∏î‡∏µ (‡∏°‡∏≤‡∏Å -> ‡∏ô‡πâ‡∏≠‡∏¢)
    const sortedProducts = [...products].sort((a, b) => (b.totalSales || 0) - (a.totalSales || 0));

    sortedProducts.forEach((p, index) => {
        let totalSales = p.totalSales || 0; // ‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô undefined
        let revenue = totalSales * p.price;
        totalRevenue += revenue;

        if (totalSales > 0) {
            hasSales = true;
            let bestSellerTag = index === 0 ? " üèÜ ‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏Ç‡∏≤‡∏¢‡∏î‡∏µ‡∏™‡∏∏‡∏î!" : "";
            report += `- ${p.name}: ‡∏Ç‡∏≤‡∏¢‡πÑ‡∏õ ${totalSales} ‡∏ä‡∏¥‡πâ‡∏ô, ‡∏£‡∏≤‡∏¢‡πÑ‡∏î‡πâ ${revenue.toLocaleString()} ‡∏ö‡∏≤‡∏ó${bestSellerTag}\n`;
        }
    });

    if (!hasSales) {
        report += "‚ùå ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡∏Ç‡∏≤‡∏¢‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤\n";
    }

    report += `üí∞ ‡∏£‡∏≤‡∏¢‡πÑ‡∏î‡πâ‡∏£‡∏ß‡∏°: ${totalRevenue.toLocaleString()} ‡∏ö‡∏≤‡∏ó`;
    document.getElementById("salesReport").innerText = report;
}



// ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏õ‡∏¥‡∏î‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏ß‡πá‡∏ö
loadProducts();